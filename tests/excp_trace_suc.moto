${
   
   void tharSheBlows(int depth){
      if(depth > 0) tharSheBlows(depth - 1);
      throw new Exception("Wheeee");
   }

   void catchHerTwiceWhenSheBlows(int depth){
      try {
      	 tharSheBlows(depth);
      } catch(Exception e) {
         print e.getStackTrace();
      } 
      try {
      	 tharSheBlows(depth);
      } catch(Exception e) {
         print e.getStackTrace();
      } 
   }
   
   void explodeWithArrayBoundsException(){
      try { int arr[] = new int[6]; arr[-1] = 3; } catch(Exception e) {print e.getStackTrace();}
   }
   
   void explodeWithANullPointer(){
      try { String o = null; o.indexOf(','); } catch(Exception e) {print e.getStackTrace();}
   }
   
   void explodeWithNativeMethodCall(){
      try { String o = "happy"; o.substring(-17); } catch(Exception e) {print e.getStackTrace();}
   }   
   
   try {
      throw new Exception("FooBarMakaShlaka");
   }catch(Exception e) {
      print e.getStackTrace();
   }

	void explodeWithExploder(Exploder e,int ticker){
	   if(ticker > 0) e.explode(ticker - 1);
      throw new Exception("Pow!");
	}
	
   class Exploder {
   	Exploder(int i){ explodeWithNativeMethodCall(); }
   	void explode(){ explodeWithArrayBoundsException(); }
   	void explode(int ticker){
   	   explodeWithExploder(this,ticker - 1);
   	}
   }
   
   try {
      tharSheBlows(0);
   }catch(Exception e) {
      print e.getStackTrace();
   }

   try {
      tharSheBlows(1);
   }catch(Exception e) {
      print e.getStackTrace();
   } 
    
   try {
      tharSheBlows(2);
   }catch(Exception e) {
      print e.getStackTrace();
      print e.getStackTrace();
   } 
   
   catchHerTwiceWhenSheBlows(3);
   explodeWithArrayBoundsException();
   // explodeWithANullPointer(); Can't test this yet, known bug in motoc.c will output wrong trace
   explodeWithNativeMethodCall();
   
   Exploder e = new Exploder(3);
   e.explode();

   try {
   	e.explode(5);
   }catch(Exception e) {
      print e.getStackTrace();
   } 
    
}$
